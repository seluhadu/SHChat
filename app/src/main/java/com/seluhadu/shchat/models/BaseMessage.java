package com.seluhadu.shchat.models;import android.os.Parcel;import android.os.Parcelable;import androidx.annotation.Nullable;import com.google.firebase.firestore.DocumentChange;import java.util.HashMap;public abstract class BaseMessage implements Parcelable {    private String receiverId;    private String msgType;    private long messageId;    private long createdAt;    private long updatedAt;    private String userId;    private long newDate;    BaseMessage() {    }    protected BaseMessage(Parcel in) {        userId = in.readString();        msgType = in.readString();        receiverId = in.readString();        messageId = in.readLong();        createdAt = in.readLong();        updatedAt = in.readLong();        newDate = in.readLong();    }    public static BaseMessage getMessages(DocumentChange documentChange) {        String type = "";        if (documentChange.getDocument().get("msgType") != null) {            type = documentChange.getDocument().get("msgType").toString();        }        switch (type) {            case "FILE":                return documentChange.getDocument().toObject(FileMessage.class);            case "UMSG":                return documentChange.getDocument().toObject(UserMessage.class);            default:                return null;        }    }    public BaseMessage(HashMap<String, Object> obj) {        this.userId = (String) obj.get("userId");        this.receiverId = (String) obj.get("receiverId");        this.msgType = (String) obj.get("msgType");        this.messageId = (long) obj.get("messageId");        this.createdAt = (long) obj.get("createdAt");        this.updatedAt = (long) obj.get("updatedAt");        this.newDate = (long) obj.get("newDate");    }    HashMap<String, Object> toJson() {        HashMap<String, Object> obj = new HashMap<>();        obj.put("userId", this.messageId);        obj.put("receiverId", this.receiverId);        obj.put("msgType", this.msgType);        obj.put("createdAt", this.createdAt);        obj.put("updatedAt", this.updatedAt);        obj.put("messageId", this.messageId);        obj.put("newDate", this.newDate);        return obj;    }    public String getMsgType() {        return msgType;    }    public void setReceiverId(String receiverId) {        this.receiverId = receiverId;    }    public void setMsgType(String msgType) {        this.msgType = msgType;    }    public String getUserId() {        return userId;    }    public void setUserId(String userId) {        this.userId = userId;    }    public String getReceiverId() {        return receiverId;    }    public long getMessageId() {        return messageId;    }    public void setMessageId(long messageId) {        this.messageId = messageId;    }    public long getCreatedAt() {        return createdAt;    }    public void setCreatedAt(long createdAt) {        this.createdAt = createdAt;    }    public long getUpdatedAt() {        return updatedAt;    }    public void setUpdatedAt(long updatedAt) {        this.updatedAt = updatedAt;    }    public void setNewDate(long newDate) {        this.newDate = newDate;    }    public long getNewDate() {        return newDate;    }    public User getUser() {        return User.getUserFromId(this.getUserId());    }    @Override    public boolean equals(@Nullable Object other) {        if (this == other) return true;        if (other == null || getClass() != other.getClass()) return false;        BaseMessage message = (BaseMessage) other;        return getMessageId() != 0 && getMessageId() == message.getMessageId();    }    @Override    public int describeContents() {        return 0;    }    @Override    public void writeToParcel(Parcel dest, int flags) {        dest.writeString(userId);        dest.writeString(msgType);        dest.writeString(receiverId);        dest.writeLong(messageId);        dest.writeLong(createdAt);        dest.writeLong(updatedAt);        dest.writeLong(newDate);    }//    public FileMessage upload(){//        FileMessage fileMessage = null;//        FirebaseFirestore firebaseFirestore =FirebaseFirestore.getInstance();//        StorageReference storageReference = FirebaseStorage.getInstance().getReference();//        storageReference.putFile(Uri.parse("file"));////    }}