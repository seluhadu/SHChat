package com.seluhadu.shchat.chat_interactore;import android.content.Context;import com.seluhadu.shchat.models.BaseMessage;public class ChatInteract implements ChatContractor.interact {    private static final String TAG = "ChatInteract";    private ChatContractor.OnGetMessagesListener onGetMessagesListener;    private ChatContractor.OnSendMessageListener onSendMessageListener;    public ChatInteract(ChatContractor.OnGetMessagesListener onGetMessagesListener,                        ChatContractor.OnSendMessageListener onSendMessageListener) {        this.onGetMessagesListener = onGetMessagesListener;        this.onSendMessageListener = onSendMessageListener;    }    @Override    public void sendMessageToFireBaseUser(Context context, BaseMessage baseMessage, String receiverFireBaseToken) {    }    @Override    public void getMessageToFireBaseUser(String senderId, String receiverId) {    }//    @Override//    public void sendMessageToFireBaseUser(final Context context, final BaseMessage baseMessage, String receiverFireBaseToken) {//        final String currentIdToReceiver = baseMessage.getUserId() + "_" + baseMessage.getReceiverId();//        final String receiverToCurrentId = baseMessage.getReceiverId() + "_" + baseMessage.getUserId();//        String sorted = FireBaseMethods.sortedIds(baseMessage.getUserId(), baseMessage.getReceiverId());//        Log.d(TAG, "Original 1: "+ currentIdToReceiver);//        Log.d(TAG, "Original 2: "+ receiverToCurrentId);//        Log.d(TAG, "sorted: "+ sorted);//        final FirebaseFirestore firebaseFirestore = FirebaseFirestore.getInstance();//        final DocumentReference dr = firebaseFirestore.collection(context.getResources().getString(R.string.messages)).document(receiverFireBaseToken);//        dr.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {//            @Override//            public void onSuccess(DocumentSnapshot documentSnapshot) {//                if (documentSnapshot.exists()) {//                   sendMessage(baseMessage, receiverToCurrentId);//                } else {//                    final DocumentReference documentReference = firebaseFirestore.collection(context.getResources().getString(R.string.messages)).document(currentIdToReceiver);//                    documentReference.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {//                        @Override//                        public void onSuccess(DocumentSnapshot documentSnapshot) {//                            sendMessage(baseMessage, currentIdToReceiver);//                            getMessageToFireBaseUser(baseMessage.getUserId(), baseMessage.getReceiverId());//                        }//                    });//                }//            }//        }).addOnFailureListener(new OnFailureListener() {//            @Override//            public void onFailure(@NonNull Exception e) {//                onSendMessageListener.onSendMessageFailure("Error: " + e.getMessage());//            }//        });//    }////    @Override//    public void getMessageToFireBaseUser(String senderId, String receiverId) {//        final String currentIdToReceiver = senderId + "_" + receiverId;//        final String receiverToCurrentId = receiverId + "_" + senderId;////        final FirebaseFirestore firebaseFirestore = FirebaseFirestore.getInstance();//        final DocumentReference dr = firebaseFirestore.collection("Messages").document(currentIdToReceiver);//        dr.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {//            @Override//            public void onSuccess(final DocumentSnapshot documentSnapshot) {//                if (documentSnapshot.exists()) {//                    getMessages(currentIdToReceiver);//                } else {//                    DocumentReference documentReference = firebaseFirestore.collection("Messages").document(receiverToCurrentId);//                    documentReference.get().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {//                        @Override//                        public void onSuccess(DocumentSnapshot documentSnapshot) {//                            if (documentSnapshot.exists()) {//                                getMessages(receiverToCurrentId);//                            }//                        }//                    });//                }//            }//        }).addOnFailureListener(new OnFailureListener() {//            @Override//            public void onFailure(@NonNull Exception e) {//                onGetMessagesListener.onGetMessagesFailure("Error: " + e.getMessage());//            }//        });//    }////    private void sendMessage(BaseMessage baseMessage, String usersId) {//        FirebaseFirestore firebaseFirestore = FirebaseFirestore.getInstance();//        if (baseMessage instanceof UserMessage) {//            UserMessage userMessage = (UserMessage) baseMessage;//            firebaseFirestore.collection("Messages")//                    .document(usersId)//                    .collection("Chats")//                    .document(String.valueOf(userMessage.getCreatedAt())).set(userMessage);//            onSendMessageListener.onSendMessageSuccess();//        } else if (baseMessage instanceof FileMessage) {//            FileMessage fileMessage = (FileMessage) baseMessage;//            firebaseFirestore.collection("Messages")//                    .document(usersId)//                    .collection("Chats")//                    .document(String.valueOf(fileMessage.getCreatedAt())).set(fileMessage);//            onSendMessageListener.onSendMessageSuccess();//        }//    }////    private void getMessages(String usersId) {//        FirebaseFirestore firebaseFirestore = FirebaseFirestore.getInstance();//        CollectionReference cr = firebaseFirestore.collection("Messages").document(usersId).collection("Chats");//        cr.addSnapshotListener(new EventListener<QuerySnapshot>() {//            @Override//            public void onEvent(@Nullable QuerySnapshot queryDocumentSnapshots, @Nullable FirebaseFirestoreException e) {//                if (e != null) {//                }//                for (DocumentChange documentChange : queryDocumentSnapshots.getDocumentChanges()) {//                    String type = documentChange.getDocument().getString("msgType");////                    if (type.equals("UMSG")) {//                        UserMessage userMessage = documentChange.getDocument().toObject(UserMessage.class);//                        onGetMessagesListener.onGetMessagesSuccess(userMessage);////                    } else if (type.equals("FMAG")) {////                        FileMessage fileMessage = documentChange.getDocument().toObject(FileMessage.class);////                        onGetMessagesListener.onGetMessagesSuccess(userMessage);////                    }//                }//            }//        });//    }}